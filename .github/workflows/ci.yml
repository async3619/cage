name: Build and Deploy

on:
    push:
        branches:
            - main
            - dev

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2.3.1
              with:
                  persist-credentials: false

            - name: Cache nextjs build
              uses: actions/cache@v2
              with:
                  path: ${{ github.workspace }}/.next/cache
                  # Generate a new cache whenever packages or source files change.
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]sx?') }}
                  # If source files changed but packages didn't, rebuild from a prior cache.
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

            - name: Cache node_modules
              id: node-cache
              uses: actions/cache@v2
              env:
                  cache-name: cache-node-modules
              with:
                  # npm cache files are stored in `~/.npm` on Linux/macOS
                  path: node_modules
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-

            - name: Install and Build
              uses: actions/setup-node@v3
              with:
                  node-version: "18.x"

            - name: Install yarn
              run: |
                  npm install -g yarn

            - name: Prepare package
              run: |
                  yarn

            - name: Lint
              run: |
                  yarn lint

            - name: Test
              env:
                  FORCE_COLOR: 3
              run: |
                  yarn coverage --ci --verbose --testTimeout=10000

            - name: Codecov
              uses: codecov/codecov-action@v3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  name: cage

            - name: Build
              run: |
                  yarn build

            - name: Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
              run: npx semantic-release

            - uses: sarisia/actions-status-discord@v1
              if: always()
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
